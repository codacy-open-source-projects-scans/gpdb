-- This test file verifies the correctness of Index Only Scans for AO/CO tables.
--
-- start_matchsubs
-- m/\(cost=.*\)/
-- s/\(cost=.*\)//
-- end_matchsubs

SET enable_seqscan TO off;
SET optimizer TO off;

CREATE TABLE uao_index_only_scan_@amname@(i int, j int) USING @amname@;
CREATE INDEX ON uao_index_only_scan_@amname@(i);

-- Set 1: Insert (and commit) some rows
INSERT INTO uao_index_only_scan_@amname@ SELECT i, 0 FROM generate_series(1, 3)i;

-- Establish a transaction with repeatable read isolation and take a snapshot
-- early
1: SET enable_seqscan TO off;
1: SET optimizer TO off;
1: BEGIN ISOLATION LEVEL REPEATABLE READ;
1: EXPLAIN SELECT i FROM uao_index_only_scan_@amname@ ORDER BY i;
-- We should see the rows from Set 1.
1: SELECT i FROM uao_index_only_scan_@amname@ ORDER BY i;

-- Set 2: Insert and then delete some rows
INSERT INTO uao_index_only_scan_@amname@ SELECT i, 0 FROM generate_series(4, 6)i;
DELETE FROM uao_index_only_scan_@amname@ WHERE i >= 4 AND i <= 6;

-- Set 3: Insert some to-be-committed rows
2: BEGIN;
2: INSERT INTO uao_index_only_scan_@amname@ SELECT i, 0 FROM generate_series(7, 9)i;

-- Set 4: Insert some aborted rows
BEGIN;
INSERT INTO uao_index_only_scan_@amname@ SELECT i, 0 FROM generate_series(10, 12)i;
ABORT;

-- We should see rows from Set 1 only. Rows from other sets should be invisible.
SELECT i FROM uao_index_only_scan_@amname@;

2: COMMIT;

-- We should see rows from Set 1 only. Rows from other sets should be invisible
-- (in spite of the rows from Set 3 now committing, due to RR semantics)
1: SELECT i FROM uao_index_only_scan_@amname@;
1: END;
