-- start_ignore
SELECT s.groupid, s.num_running, s.num_queueing, s.num_queued, s.num_executed FROM pg_resgroup_get_status(NULL::oid) s(groupid, num_running, num_queueing, num_queued, num_executed, total_queue_duration);
 groupid | num_running | num_queueing | num_queued | num_executed 
---------+-------------+--------------+------------+--------------
(0 rows)
-- end_ignore
CREATE TEMP TABLE resgroup_function_test(LIKE gp_toolkit.gp_resgroup_status);
CREATE TABLE

INSERT INTO resgroup_function_test(groupid, num_running, num_queueing, num_queued, num_executed) SELECT s.groupid, s.num_running, s.num_queueing, s.num_queued, s.num_executed FROM pg_resgroup_get_status(NULL::oid) s(groupid, num_running, num_queueing, num_queued, num_executed, total_queue_duration) LIMIT 1;
INSERT 0 1

SELECT count(num_executed)>0 FROM resgroup_function_test WHERE num_executed IS NOT NULL;
 ?column? 
----------
 t        
(1 row)

-- Check that the contents of the cpu_usage field are valid JSON
ANALYZE resgroup_function_test;
ANALYZE
