select gp_segment_id, gp_get_next_gxid() < (select gp_get_next_gxid()) from gp_dist_random('gp_id');
 gp_segment_id | ?column? 
---------------+----------
 1             | t        
 2             | t        
 0             | t        
(3 rows)
-- start_ignore
select gp_segment_id,gp_get_next_gxid() on_seg, (select gp_get_next_gxid() on_cor) from gp_dist_random('gp_id');
 gp_segment_id | on_seg | on_cor 
---------------+--------+--------
 0             | 53830  | 53831  
 1             | 53830  | 53831  
 2             | 53830  | 53831  
(3 rows)
-- end_ignore

-- trigger coordinator panic and wait until coordinator down before running any new query.
1&: SELECT wait_till_master_shutsdown();  <waiting ...>
2: SELECT gp_inject_fault('before_read_command', 'panic', 1);
 gp_inject_fault 
-----------------
 Success:        
(1 row)
2: SELECT 1;
PANIC:  fault triggered, fault name:'before_read_command' fault type:'panic'
server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.
1<:  <... completed>
server closed the connection unexpectedly
	This probably means the server terminated abnormally
	before or while processing the request.

-- wait until coordinator is up for querying.
3: SELECT 1;
 ?column? 
----------
 1        
(1 row)

3: select gp_segment_id, gp_get_next_gxid() < (select gp_get_next_gxid()) from gp_dist_random('gp_id');
 gp_segment_id | ?column? 
---------------+----------
 2             | t        
 0             | t        
 1             | t        
(3 rows)
-- start_ignore
3: select gp_segment_id,gp_get_next_gxid() on_seg, (select gp_get_next_gxid() on_cor) from gp_dist_random('gp_id');
 gp_segment_id | on_seg | on_cor 
---------------+--------+--------
 0             | 53830  | 61997  
 1             | 53830  | 61997  
 2             | 53830  | 61997  
(3 rows)
-- end_ignore
