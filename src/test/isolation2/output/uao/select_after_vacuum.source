-- @Description Ensures that a select after a vacuum operation is ok
--
DROP TABLE IF EXISTS ao;
DROP TABLE
DROP TABLE IF EXISTS ao2;
DROP TABLE
CREATE TABLE ao2 (a INT) USING @amname@;
CREATE TABLE
CREATE TABLE ao (a INT) USING @amname@;
CREATE TABLE
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao2 select generate_series(1,1000);
INSERT 0 1000

-- The actual test begins
DELETE FROM ao WHERE a < 128;
DELETE 2667
1: BEGIN;
BEGIN
1: SELECT COUNT(*) FROM ao2;
 count 
-------
 1000  
(1 row)
0: SELECT segno, case when tupcount = 0 then 'zero' when tupcount = 1 then 'one' when tupcount <= 5 then 'few' else 'many' end FROM gp_ao_or_aocs_seg('ao');
 segno | case 
-------+------
 1     | many 
 1     | many 
 1     | many 
(3 rows)
2: VACUUM ao;
VACUUM
1: SELECT COUNT(*) FROM ao;
 count 
-------
 18333 
(1 row)
1: SELECT * FROM locktest_master WHERE coalesce = 'ao';
 coalesce | mode            | locktype | node   
----------+-----------------+----------+--------
 ao       | AccessShareLock | relation | master 
(1 row)
1: SELECT * FROM locktest_segments WHERE coalesce = 'ao';
 coalesce | mode            | locktype | node       
----------+-----------------+----------+------------
 ao       | AccessShareLock | relation | n segments 
(1 row)
1: COMMIT;
COMMIT
1: SELECT COUNT(*) FROM ao;
 count 
-------
 18333 
(1 row)
3: INSERT INTO ao VALUES (0);
INSERT 0 1
0: SELECT segno, case when tupcount = 0 then 'zero' when tupcount = 1 then 'one' when tupcount <= 5 then 'few' else 'many' end FROM gp_ao_or_aocs_seg('ao');
 segno | case 
-------+------
 1     | many 
 2     | many 
 1     | many 
 2     | many 
 1     | many 
 2     | many 
(6 rows)
0: SELECT * FROM gp_ao_or_aocs_seg('ao');
 segment_id | segno | tupcount | modcount | formatversion | state 
------------+-------+----------+----------+---------------+-------
 0          | 1     | 7098     | 22       | 3             | 2     
 0          | 2     | 6069     | 0        | 3             | 1     
 1          | 1     | 6762     | 22       | 3             | 2     
 1          | 2     | 5923     | 1        | 3             | 1     
 2          | 1     | 7140     | 22       | 3             | 2     
 2          | 2     | 6342     | 0        | 3             | 1     
(6 rows)
