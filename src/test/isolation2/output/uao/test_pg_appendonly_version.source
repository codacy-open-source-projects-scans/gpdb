-- Validate pg_appendonly.version functioning by unique index creation
-- as it requires pg_appendonly.version >= AORelationVersion_GP7.

create table @amname@_version_tbl (a int) using @amname@;
CREATE TABLE

-- unique index on AO is supported starting from version 2 (AORelationVersion_GP7)
select version from pg_appendonly where relid = '@amname@_version_tbl'::regclass;
 version 
---------
 2       
(1 row)
create unique index on @amname@_version_tbl(a);
CREATE INDEX
insert into @amname@_version_tbl select generate_series(1, 10);
INSERT 0 10
create unique index on @amname@_version_tbl(a);
CREATE INDEX
set enable_seqscan = off;
SET
select * from @amname@_version_tbl where a = 2;
 a 
---
 2 
(1 row)

-- modify pg_appendonly.version to older such like 1 (AORelationVersion_GP6)
set allow_system_table_mods = on;
SET
update pg_appendonly set version = 1 where relid = '@amname@_version_tbl'::regclass;
UPDATE 1

-- unique index on AO isn't supported on version < AORelationVersion_GP7
select version from pg_appendonly where relid = '@amname@_version_tbl'::regclass;
 version 
---------
 1       
(1 row)
create unique index on @amname@_version_tbl(a);
ERROR:  append-only tables with older relation versions do not support unique indexes
DETAIL:  version found = 1, minimum version required = 2
HINT:  ALTER TABLE <table-name> SET WITH (REORGANIZE = true) before creating the unique index

-- alter table with reorganize to verify pg_appendonly being rewritten
alter table @amname@_version_tbl set with (reorganize = true);
ALTER TABLE
select version from pg_appendonly where relid = '@amname@_version_tbl'::regclass;
 version 
---------
 2       
(1 row)
create unique index on @amname@_version_tbl(a);
CREATE INDEX
select * from @amname@_version_tbl where a = 3;
 a 
---
 3 
(1 row)

drop table @amname@_version_tbl;
DROP TABLE
reset allow_system_table_mods;
RESET
