create schema alter_ao_table_index_@amname@;
set search_path="$user",alter_ao_table_index_@amname@,public;
SET default_table_access_method=@amname@;
-- Tests to update AO tables with indexes.
CREATE TABLE sto_alt_uao3_idx(
  text_col text,
  bigint_col bigint,
  char_vary_col character varying(30),
  numeric_col numeric
  ) DISTRIBUTED by (text_col);
Create index sto_alt_uao3_idx_idx on sto_alt_uao3_idx(bigint_col);
insert into sto_alt_uao3_idx values ('1_zero', 1, '1_zero', 1);
insert into sto_alt_uao3_idx select 'abc_'||i, i, 'pqr'||i, i
 from generate_series(1,100)i;
select count(*) AS visible_only from sto_alt_uao3_idx;
update sto_alt_uao3_idx set numeric_col = 100 where text_col = '1_zero';
select count(*) AS visible_only from sto_alt_uao3_idx;
set gp_select_invisible = true;
select count(*) AS all_tuples from sto_alt_uao3_idx;
set gp_select_invisible = false;
-- Update indexed column
update sto_alt_uao3_idx set bigint_col = numeric_col % 11;
select * from sto_alt_uao3_idx where bigint_col = 11;
set gp_select_invisible = true;
select * from sto_alt_uao3_idx where bigint_col = 11;
set gp_select_invisible = false;

-- Append optimized tables should not have a valid relfrozenxid in
-- pg_class because per-tuple MVCC information (xmin/xmax) is not
-- present.
select relfrozenxid from pg_class c, pg_namespace n where
       c.relnamespace = n.oid and relname = 'sto_alt_uao3_idx'
       and n.nspname = 'alter_ao_table_index_@amname@';
select relfrozenxid from gp_dist_random('pg_class') c, pg_namespace n where
       c.relnamespace = n.oid and relname = 'sto_alt_uao3_idx'
       and n.nspname = 'alter_ao_table_index_@amname@';

-- Verify that alter table cluster on indexname is allowed
Alter table sto_alt_uao3_idx cluster on sto_alt_uao3_idx_idx;
select indisclustered from pg_index where indexrelid='sto_alt_uao3_idx_idx'::regclass;
Alter table sto_alt_uao3_idx set without cluster;
select indisclustered from pg_index where indexrelid='sto_alt_uao3_idx_idx'::regclass;
-- Verify that cluster is allowed
CLUSTER sto_alt_uao3_idx using sto_alt_uao3_idx_idx;
select indisclustered from pg_index where indexrelid='sto_alt_uao3_idx_idx'::regclass;

-- relfrozenxid should remain invalid after table rewrite
select relfrozenxid from pg_class c, pg_namespace n where
       c.relnamespace = n.oid and relname = 'sto_alt_uao3_idx'
       and n.nspname = 'alter_ao_table_index_@amname@';
select relfrozenxid from gp_dist_random('pg_class') c, pg_namespace n where
       c.relnamespace = n.oid and relname = 'sto_alt_uao3_idx'
       and n.nspname = 'alter_ao_table_index_@amname@';
